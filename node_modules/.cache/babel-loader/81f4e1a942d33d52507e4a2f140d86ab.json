{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ELAMATHI\\\\Desktop\\\\Netflix\\\\netflix-clone\\\\src\\\\Row.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\n\nfunction Row({\n  title,\n  fetchUrl\n}) {\n  _s();\n\n  const [movies, setMovies] = useState([]); // A snippet of code which runs on a specific condition\n\n  useEffect(() => {\n    //if [],run once when the row loads and dont run again.\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      console.log(request); //setMovies(request.data.results) \n\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n  console.table(movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row_posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.poster_path,\n        alt: movie.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 22\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Row, \"+jZiGaK1IrFkDFSplSYv9W7La4s=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["C:/Users/ELAMATHI/Desktop/Netflix/netflix-clone/src/Row.js"],"names":["React","useState","useEffect","axios","Row","title","fetchUrl","movies","setMovies","fetchData","request","get","console","log","table","map","movie","poster_path","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,GAAT,CAAa;AAACC,EAAAA,KAAD;AAAOC,EAAAA;AAAP,CAAb,EAA+B;AAAA;;AAC3B,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAmBP,QAAQ,CAAC,EAAD,CAAjC,CAD2B,CAG3B;;AACAC,EAAAA,SAAS,CAAC,MAAK;AACX;AACA,mBAAeO,SAAf,GAA2B;AACvB,YAAMC,OAAO,GAAE,MAAMP,KAAK,CAACQ,GAAN,CAAUL,QAAV,CAArB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAFuB,CAGvB;;AACA,aAAOA,OAAP;AACH;;AACDD,IAAAA,SAAS;AACZ,GATQ,EASL,CAACH,QAAD,CATK,CAAT;AAWAM,EAAAA,OAAO,CAACE,KAAR,CAAcP,MAAd;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAEI;AAAA,gBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBAEME,MAAM,CAACQ,GAAP,CAAWC,KAAK,iBACb;AAAK,QAAA,GAAG,EAAEA,KAAK,CAACC,WAAhB;AAA6B,QAAA,GAAG,EAAED,KAAK,CAACE;AAAxC;AAAA;AAAA;AAAA;AAAA,cADH;AAFN;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GA7BQd,G;;KAAAA,G;AA+BT,eAAeA,GAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport axios from \"axios\";\r\n\r\nfunction Row({title,fetchUrl}) {\r\n    const [movies,setMovies]=useState([]);\r\n\r\n    // A snippet of code which runs on a specific condition\r\n    useEffect(()=> {\r\n        //if [],run once when the row loads and dont run again.\r\n        async function fetchData() {\r\n            const request =await axios.get(fetchUrl);\r\n            console.log(request);\r\n            //setMovies(request.data.results) \r\n            return request;\r\n        }\r\n        fetchData();\r\n    },  [fetchUrl]);\r\n\r\n    console.table(movies);\r\n    return (\r\n        <div className=\"row\">\r\n            {/*title*/}\r\n            <h2>{title}</h2>\r\n            <div className=\"row_posters\">\r\n                 {/*container->poster*/}\r\n                 {movies.map(movie =>(\r\n                     <img src={movie.poster_path} alt={movie.name}/>\r\n                 ))}\r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n"]},"metadata":{},"sourceType":"module"}